<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">

<flight_plan alt="660" ground_alt="605" lat0="53.63840" lon0="-113.28657" max_dist_from_home="1000" name="Basic" security_height="35" home_mode_height="55" qfu="270"> <!-- Bremner -->
  <header>
#include "firmwares/fixedwing/guidance/energy_ctrl.h"
#include "subsystems/datalink/datalink.h"

#include "subsystems/navigation/gls.h"
#include "subsystems/navigation/OSAMNav.h"
#include "generated/airframe.h"
#include "subsystems/navigation/poly_survey_adv.h"

#ifdef DC_AUTOSHOOT_QUARTERSEC_PERIOD
#include "modules/digital_cam/dc.h"
#define DC_SHOOT_ON_RETURN 1
#define LINE_START_FUNCTION dc_autoshoot = DC_AUTOSHOOT_PERIODIC;
//#define LINE_START_FUNCTION dc_Survey(dc_gps_dist);
#define LINE_STOP_FUNCTION dc_autoshoot = DC_AUTOSHOOT_STOP;
#endif

// For photogrammetry module
#define PHOTOGRAMMETRY_SWEEP_ANGLE 0.01   // Degrees from the North, RADIANS, not degrees
#define PHOTOGRAMMETRY_OVERLAP 50   // 1-99 Procent
#define PHOTOGRAMMETRY_SIDELAP 50   // 1-99 Procent
#define PHOTOGRAMMETRY_RESOLUTION 80    // mm pixel projection size
</header>
  <waypoints>
    <waypoint name="HOME" x="0" y="0"/>
    <waypoint name="STDBY" x="45.0" y="100"/>
    <waypoint name="1" x="55.0" y="102.2"/>
    <waypoint name="2" x="-83.5" y="122.9"/>
    <waypoint name="MOB" x="110.5" y="-21.2"/>
    <waypoint name="S1" x="-161.6" y="80.4"/>
    <waypoint name="S2" x="170.1" y="214.9"/>
    <waypoint height="20.0" name="AF" x="170" y="40"/>
    <waypoint height="20.0" name="SD" x="26.9" y="68.0"/>
    <waypoint height="0.0" name="TD" x="0.0" y="40.0"/>
    <waypoint height="20.0" name="TOD" x="26.9" y="63.0"/>
    <waypoint height="20.0" name="BASELEG" x="26.9" y="63.0"/>
    <waypoint height="50.0" name="mockAF" x="170" y="40"/>
    <waypoint height="50.0" name="mockSD" x="26.9" y="68.0"/>
    <waypoint height="30.0" name="mockTD" x="0.0" y="40.0"/>
    <waypoint height="50.0" name="mockTOD" x="26.9" y="63.0"/>
    <waypoint name="_1" x="-100" y="50"/>
    <waypoint name="_2" x="-100" y="250"/>
    <waypoint name="_3" x="100" y="250"/>
    <waypoint name="_4" x="100" y="50"/>
    <waypoint name="5" x="-150" y="85"/>
    <waypoint name="6" x="-150" y="405"/>
    <waypoint name="7" x="275" y="405"/>
    <waypoint name="8" x="275" y="50"/>
    <waypoint name="CLIMB" x="-122.5" y="45.0"/>
  </waypoints>
  <sectors>
    <sector name="Square">
      <corner name="_1"/>
      <corner name="_2"/>
      <corner name="_3"/>
      <corner name="_4"/>
    </sector>
    <sector name="Square2">
      <corner name="5"/>
      <corner name="6"/>
      <corner name="7"/>
      <corner name="8"/>
    </sector>
  </sectors>
  <exceptions>
    <exception cond="And((datalink_time > 25),launch)" deroute="Standby"/>
    <exception cond="And((GetPosAlt() > ground_alt + 230),launch)" deroute="Standby"/>
    <!-- add exception to return to home if r/c lost for > 2s?  -->
  </exceptions>
  <blocks>
    <block name="Wait GPS">
      <set value="1" var="kill_throttle"/>
      <while cond="!GpsFixValid()"/>
    </block>
    <block name="Geo init">
      <while cond="LessThan(NavBlockTime(), 10)"/>
      <call fun="NavSetGroundReferenceHere()"/>
    </block>
    <block name="Holding point">
      <set value="1" var="kill_throttle"/>
      <attitude roll="0" throttle="0" vmode="throttle"/>
    </block>
    <block group="basic" name="Takeoff" strip_icon="takeoff.png" strip_button="Takeoff (wp CLIMB)">
      <exception cond="GetPosAlt() > ground_alt+25" deroute="Standby"/>
      <set value="0" var="kill_throttle"/>
      <set value="0" var="autopilot_flight_time"/>
      <!-- <set value="CLIMB_AIRSPEED" var="v_ctl_auto_airspeed_setpoint" /> -->
      <go wp="CLIMB"/>
    </block>
    <block group="basic" name="Standby" strip_button="Standby" strip_icon="home.png">
      <set value="NOMINAL_AIRSPEED" var="v_ctl_auto_airspeed_setpoint" />
      <circle radius="nav_radius" wp="STDBY"/>
    </block>
    <block group="basic" name="Figure 8 around wp 1" strip_button="Figure 8 (wp 1-2)" strip_icon="eight.png">
      <eight center="1" radius="nav_radius" turn_around="2"/>
    </block>
    <block group="basic" name="Oval 1-2" strip_button="Oval (wp 1-2)" strip_icon="oval.png">
      <!-- <set value="RACE_AIRSPEED" var="v_ctl_auto_airspeed_setpoint" /> -->
      <set value="NOMINAL_AIRSPEED" var="v_ctl_auto_airspeed_setpoint" />
      <oval p1="1" p2="2" radius="nav_radius"/>
    </block>
    <block group="basic" name="Oval S1-S2" strip_button="Oval (wp S1-S2)" strip_icon="oval.png">
      <!-- <set value="RACE_AIRSPEED" var="v_ctl_auto_airspeed_setpoint" /> -->
      <set value="NOMINAL_AIRSPEED" var="v_ctl_auto_airspeed_setpoint" />
      <oval p1="S1" p2="S2" radius="-nav_radius"/>
    </block>
    <block group="basic" name="MOB" strip_button="Turn around here" strip_icon="mob.png">
      <call fun="NavSetWaypointHere(WP_MOB)"/>
      <circle radius="100" wp="MOB"/>
    </block>
    <block name="Auto pitch (circle wp 1)">
      <circle pitch="auto" radius="75" throttle="0.7" wp="1"/>
    </block>
    <block name="Climb 75% throttle">
      <circle pitch="10" radius="50+(GetPosAlt()-ground_alt)/2" throttle="0.75" until="(10 > PowerVoltage()) || (GetPosAlt() > ground_alt+ 1350)" vmode="throttle" wp="1"/>
    </block>
    <block name="Climb 0m/s">
      <circle climb="0" radius="nav_radius" until="10 > PowerVoltage()" vmode="climb" wp="1"/>
    </block>
    <block name="Climb 1m/s">
      <circle climb="1" pitch="5" radius="50+(GetPosAlt()-ground_alt)/2" until="10 > PowerVoltage()" vmode="climb" wp="1"/>
    </block>
    <block name="Climb nav_climb m/s">
      <circle climb="nav_climb" radius="nav_radius" until="(10 > PowerVoltage()) || (GetPosAlt() > ground_alt+ 1350)" vmode="climb" wp="1"/>
    </block>

    <block name="Circle 0% throttle">
      <circle pitch="fp_pitch" radius="nav_radius" throttle="0.0" until="ground_alt+50 > GetPosAlt()" vmode="throttle" wp="1"/>
      <deroute block="Standby"/>
    </block>

    <block name="Oval 0% throttle">
      <oval p1="1" p2="2" pitch="fp_pitch" radius="nav_radius" throttle="0.0" until="ground_alt+50 > GetPosAlt()" vmode="throttle"/>
      <deroute block="Standby"/>
    </block>


    <block name="Route 1-2">
      <go approaching_time="0" from="1" hmode="route" wp="2"/>
    </block>
    <block name="Stack wp 2">
      <circle radius="75" wp="2"/>
    </block>
    <block name="Route 2-1">
      <go approaching_time="0" from="2" hmode="route" wp="1"/>
    </block>
    <block name="Stack wp 1">
      <circle radius="75" wp="1"/>
    </block>
    <block name="Glide 1-2">
      <go from="1" hmode="route" vmode="glide" wp="2"/>
      <deroute block="Standby"/>
    </block>
    <block group="survey1" name="Survey S1-S2 60" strip_button="Survey (wp S1-S2)" strip_icon="survey.png">
      <survey_rectangle grid="60" wp1="S1" wp2="S2"/>
    </block>
    <block group="survey1" name="Survey S1-S2 80" strip_button="Survey (wp S1-S2)" strip_icon="survey.png">
      <survey_rectangle grid="80" wp1="S1" wp2="S2"/>
    </block>
    <block group="survey1" name="Survey S1-S2 100" strip_button="Survey (wp S1-S2)" strip_icon="survey.png">
      <survey_rectangle grid="100" wp1="S1" wp2="S2"/>
    </block>
    <block group="survey1" name="Survey S1-S2 60 WE" strip_button="Survey (wp S1-S2)" strip_icon="survey.png">
      <survey_rectangle grid="60" wp1="S1" wp2="S2" orientation="WE"/>
    </block>
    <block group="survey1" name="Survey S1-S2 80 WE" strip_button="Survey (wp S1-S2)" strip_icon="survey.png">
      <survey_rectangle grid="80" wp1="S1" wp2="S2" orientation="WE"/>
    </block>
    <block group="survey1" name="Survey S1-S2 100 WE" strip_button="Survey (wp S1-S2)" strip_icon="survey.png">
      <survey_rectangle grid="100" wp1="S1" wp2="S2" orientation="WE"/>
    </block>
    <block group="land" name="Land Right AF-TD" strip_button="Land right (wp AF-TD)" strip_icon="land-right.png">
      <set value="DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <deroute block="land"/>
    </block>
    <block group="land" name="Land Left AF-TD" strip_button="Land left (wp AF-TD)" strip_icon="land-left.png">
      <set value="-DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <deroute block="land"/>
    </block>
    <block group="land" name="Constant Slope Land Right AF-TD" strip_button="CS Land right (wp AF-TD)" strip_icon="land-right.png">
      <call fun="nav_compute_final_from_glide(WP_AF, WP_TD, 10.)"/>
      <set value="DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <deroute block="land"/>
    </block>
    <block group="land" name="Constant Slope Land Left AF-TD" strip_button="CS Land left (wp AF-TD)" strip_icon="land-left.png">
      <call fun="nav_compute_final_from_glide(WP_AF, WP_TD, 10.)"/>
      <set value="-DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <deroute block="land"/>
    </block>
    <block name="land">
      <set value="NOMINAL_AIRSPEED" var="v_ctl_auto_airspeed_setpoint" />
      <call fun="nav_compute_baseleg(WP_AF, WP_TD, WP_BASELEG, nav_radius)"/>
      <circle radius="nav_radius" until="NavCircleCount() > 0.5" wp="BASELEG"/>
      <set value="GLIDE_AIRSPEED" var="v_ctl_auto_airspeed_setpoint" />
      <circle radius="nav_radius" until="NavQdrCloseTo(DegOfRad(baseleg_out_qdr)-(nav_radius/fabs(nav_radius))*10) && 10 > fabs(GetPosAlt() - WaypointAlt(WP_BASELEG))" wp="BASELEG"/>
    </block>
    <block name="final">
      <go from="AF" hmode="route" vmode="glide" wp="TD" approaching_time="5" />
      <set value="(GLIDE_AIRSPEED*10.0/12.0)" var="v_ctl_auto_airspeed_setpoint" />
    </block>
    <block name="flare">
      <go approaching_time="0" from="AF" hmode="route" throttle="0.0" vmode="glide" wp="TD"  approaching_time="0" />
      <attitude roll="0.0" throttle="0.0" until="FALSE" vmode="throttle" />
    </block>
    <block group="land" name="GLS Land Right AF-TD" strip_button="GLS Land right (wp AF-TD)" strip_icon="land-right.png">
      <set value="DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <deroute block="land_gls"/>
    </block>
    <block group="land" name="GLS Land Left AF-TD" strip_button="GLS Land left (wp AF-TD)" strip_icon="land-left.png">
      <set value="-DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <deroute block="land_gls"/>
    </block>
    <block name="land_gls">
      <call fun="gls_init(WP_AF, WP_SD, WP_TOD, WP_TD)"/> 
      <call fun="nav_compute_baseleg(WP_AF, WP_TD, WP_BASELEG, nav_radius)"/>
      <!-- possibly go to the BASELEG waypoint at altitude, then descend while circling? -->
      <circle radius="nav_radius" alt="SECURITY_ALT" until="NavCircleCount() > 0.5" wp="BASELEG"/>
      <circle radius="nav_radius" until="And(NavQdrCloseTo(DegOfRad(baseleg_out_qdr)-(nav_radius/fabs(nav_radius))*10), 10 > fabs(GetPosAlt() - WaypointAlt(WP_BASELEG)))" wp="BASELEG"/>
    </block>
    <block name="final_gls">
      <exception cond="ground_alt + 10 > GetPosAlt()" deroute="flare"/>
      <call fun="gls(WP_AF, WP_SD, WP_TOD, WP_TD)"/>
    </block>



    <block group="mockland" name="mockLand Right AF-TD" strip_button="mockLand right (wp AF-TD)" strip_icon="land-right.png">
      <set value="DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <deroute block="mockland"/>
    </block>
    <block group="mockland" name="mockLand Left AF-TD" strip_button="mockLand left (wp AF-TD)" strip_icon="land-left.png">
      <set value="-DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <deroute block="mockland"/>
    </block>
    <block group="mockland" name="mockConstant Slope Land Right AF-TD" strip_button="mockCS Land right (wp AF-TD)" strip_icon="land-right.png">
      <call fun="nav_compute_final_from_glide(WP_mockAF, WP_mockTD, 10.)"/>
      <set value="DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <deroute block="mockland"/>
    </block>
    <block group="mockland" name="mockConstant Slope Land Left AF-TD" strip_button="mockCS Land left (wp AF-TD)" strip_icon="land-left.png">
      <call fun="nav_compute_final_from_glide(WP_mockAF, WP_mockTD, 10.)"/>
      <set value="-DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <deroute block="mockland"/>
    </block>
    <block name="mockland">
      <set value="NOMINAL_AIRSPEED" var="v_ctl_auto_airspeed_setpoint" />
      <call fun="nav_compute_baseleg(WP_mockAF, WP_mockTD, WP_BASELEG, nav_radius)"/>
      <circle radius="nav_radius" until="NavCircleCount() > 0.5" wp="BASELEG"/>
      <set value="GLIDE_AIRSPEED" var="v_ctl_auto_airspeed_setpoint" />
      <circle radius="nav_radius" until="NavQdrCloseTo(DegOfRad(baseleg_out_qdr)-(nav_radius/fabs(nav_radius))*10) && 10 > fabs(GetPosAlt() - WaypointAlt(WP_BASELEG))" wp="BASELEG"/>
    </block>
    <block name="mockfinal">
      <exception cond="(ground_alt + 15.) > GetPosAlt()" deroute="Standby"/>
      <go from="mockAF" hmode="route" vmode="glide" wp="mockTD" approaching_time="5" />
      <set value="(GLIDE_AIRSPEED*10.0/12.0)" var="v_ctl_auto_airspeed_setpoint" />
    </block>
    <block name="mockflare">
      <exception cond="(ground_alt + 15.) > GetPosAlt()" deroute="Standby"/>
      <go approaching_time="0" from="mockAF" hmode="route" throttle="0.0" vmode="glide" wp="mockTD"  approaching_time="0" />
      <attitude roll="0.0" throttle="0.0" until="FALSE" vmode="throttle" />
    </block>
    <block group="mockland" name="mockGLS Land Right AF-TD" strip_button="mockGLS Land right (wp AF-TD)" strip_icon="land-right.png">
      <set value="DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <deroute block="mockland_gls"/>
    </block>
    <block group="mockland" name="mockGLS Land Left AF-TD" strip_button="mockGLS Land left (wp AF-TD)" strip_icon="land-left.png">
      <set value="-DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <deroute block="mockland_gls"/>
    </block>
    <block name="mockland_gls">
      <call fun="gls_init(WP_mockAF, WP_mockSD, WP_mockTOD, WP_mockTD)"/> 
      <call fun="nav_compute_baseleg(WP_mockAF, WP_mockTD, WP_BASELEG, nav_radius)"/>
      <!-- possibly go to the BASELEG waypoint at altitude, then descend while circling? -->
      <circle radius="nav_radius" alt="SECURITY_ALT" until="NavCircleCount() > 0.5" wp="BASELEG"/>
      <circle radius="nav_radius" until="And(NavQdrCloseTo(DegOfRad(baseleg_out_qdr)-(nav_radius/fabs(nav_radius))*10), 10 > fabs(GetPosAlt() - WaypointAlt(WP_BASELEG)))" wp="BASELEG"/>
    </block>
    <block name="mockfinal_gls">
      <exception cond="(ground_alt + 15.) > GetPosAlt()" deroute="Standby"/>
      <exception cond="ground_alt + 10 > GetPosAlt()" deroute="mockflare"/>
      <call fun="gls(WP_mockAF, WP_mockSD, WP_mockTOD, WP_mockTD)"/>
    </block>


    <block name="Steps roll -10, +10">
      <while cond="TRUE">
        <attitude alt="680" roll="10.0" until=" stage_time > 6" vmode="alt"/>
        <attitude alt="680" roll="-10.0" until="stage_time > 6" vmode="alt"/>
      </while>
    </block>
    <block name="Steps roll -20, +20">
      <while cond="TRUE">
        <attitude alt="680" roll="20.0" until=" stage_time > 3" vmode="alt"/>
        <attitude alt="680" roll="-20.0" until="stage_time > 3" vmode="alt"/>
      </while>
    </block>
    <block name="Steps pitch -10, +10">
      <while cond="TRUE">
        <attitude alt="680" pitch="10" roll="0.0" until=" stage_time > 2" vmode="alt"/>
        <attitude alt="680" pitch="-10" roll="0.0" until=" stage_time > 2" vmode="alt"/>
      </while>
    </block>
    <block name="Heading 30">
      <heading alt="ground_alt+75" course="30" until="FALSE"/>
    </block>
    <block name="For loop (circles wp 1)">
      <for from="0" to="3" var="i">
        <circle radius="DEFAULT_CIRCLE_RADIUS+ $i*10" wp="1" until="NavCircleCount() > 1"/>
      </for>
      <deroute block="Standby"/>
    </block>
    <block name="Test datalink (go to wp 2)">
      <exception cond="datalink_time > 22" deroute="Standby"/>
      <go from="STDBY" hmode="route" wp="2"/>
      <go from="2" hmode="route" wp="STDBY"/>
    </block>
    <block name="Fly in Square">
      <exception cond="! InsideSquare(GetPosX(), GetPosY())" deroute="Come back wp 1"/>
      <attitude alt="ground_alt+75" roll="0" vmode="alt"/>
    </block>
    <block name="Come back wp 1">
      <exception cond="InsideSquare(GetPosX(), GetPosY())" deroute="Fly in Square"/>
      <go wp="1"/>
      <deroute block="Fly in Square"/>
    </block>

    <!-- <block group="survey" name="Survey N-S Rect" strip_button="Survey (wp S1-S2)" strip_icon="survey.png">
      <survey_rectangle grid="150" wp1="S1" wp2="S2"/>
    </block> -->
    <block group="survey" name="Init Photo ADV Poly Survey 5678" strip_button="photo survey ADV 5678" strip_icon="survey.png">
      <call fun="PhotogrammetryCalculatorPolygonSurveyADV(WP_5, 4)"/>
      <call fun="poly_survey_adv()"/>
      <deroute block="Standby"/>
    </block>
    <block group="survey" name="Init Photo Poly Survey 5678" strip_button="photo survey 5678" strip_icon="survey.png">
      <call fun="PhotogrammetryCalculatorPolygonSurvey(WP_5, 4)"/>
      <call fun="PolygonSurvey()"/>
    </block>
    <block group="survey" name="Init Raw ADV Poly Survey 5678" strip_button="raw survey ADV 5678" strip_icon="survey.png">
      <call fun="init_poly_survey_adv(WP_5, 4, 0., 100., 25., 70., 660.)"/>
      <call fun="poly_survey_adv()"/>
      <deroute block="Standby"/>
    </block>
    <block group="survey" name="Init Raw OSAM Poly Survey 5678" strip_button="osam survey 5678" strip_icon="survey.png">
      <call fun="InitializePolygonSurvey(WP_5, 4, 100., nav_course)"/>
      <call fun="PolygonSurvey()"/>
    </block>
    <block group="survey" name="Continue Raw ADV Poly Survey" strip_button="cont ADV survey" strip_icon="survey.png">
      <call fun="poly_survey_adv()"/>
    </block>
    <block group="survey" name="Continue Raw Osam Poly Survey" strip_button="cont OSAM survey" strip_icon="survey.png">
      <call fun="PolygonSurvey()"/>
    </block>
    <block name="Cancel Survey" strip_button="Cancel Survey" strip_icon="survey.png">
      <set value="DC_AUTOSHOOT_STOP" var="dc_autoshoot"/>
      <deroute block="Standby"/>
    </block>

    <block group="lines" name="Vertical Raster S1-S2" strip_button="vert raster S1-S2" strip_icon="line.png">
      <call fun="InitializeVerticalRaster()"/>
      <call fun="VerticalRaster(WP_S1, WP_S2, nav_radius, 20.0)"/>
    </block>

  </blocks>
</flight_plan>
